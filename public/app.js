(()=>{"use strict";function t(t){return(t-273.15).toFixed(1)}document.getElementById("fetch-weather").addEventListener("click",(function(){var e,n,o,r,c=document.getElementById("city-select").value;if(c){var a=c.split(",");(e=a[0],n=a[1],o=Math.floor(Date.now()/1e3),r="/weather/".concat(e,"/").concat(n,"/").concat(o),fetch(r).then((function(t){if(!t.ok)throw new Error("An error occurred: ".concat(t.statusText));return t.json()})).catch((function(t){throw console.error("Error fetching weather:",t),t}))).then((function(e){var n,o;n=e,(o=document.getElementById("weather-result")).innerHTML="",o.className="weather-grid",n.data.forEach((function(e){var n=document.createElement("div");n.className="weather-item";var r=new Date(1e3*e.dt),c=new Date(1e3*e.sunrise),a=new Date(1e3*e.sunset);n.innerHTML="\n            <h3>".concat(r.toLocaleDateString(),"</h3>\n            <p><strong>Description:</strong> ").concat(e.weather[0].description,"</p>\n            <p><strong>Temperature:</strong> ").concat(t(e.temp),"°C</p>\n            <p><strong>Feels Like:</strong> ").concat(t(e.feels_like),"°C</p>\n            <p><strong>Pressure:</strong> ").concat(e.pressure," hPa</p>\n            <p><strong>Humidity:</strong> ").concat(e.humidity,"%</p>\n            <p><strong>Wind Speed:</strong> ").concat(e.wind_speed.toFixed(1)," m/s</p>\n            <p><strong>Clouds:</strong> ").concat(e.clouds,"%</p>\n            <p><strong>Sunrise:</strong> ").concat(c.toLocaleTimeString(),"</p>\n            <p><strong>Sunset:</strong> ").concat(a.toLocaleTimeString(),"</p>\n        "),o.appendChild(n)})),function(e){var n=e.data[0],o=t(n.temp),r=function(t){switch(t){case"rain":return"Umbrella";case"clear":return"Sunglasses";case"wind":return"Windcoat";default:return""}}(n.weather[0].main.toLowerCase()),c="Wind: ".concat(n.wind_speed.toFixed(1),"m/s"),a="Clouds: ".concat(n.clouds,"%"),s=new Date(1e3*n.sunrise).toLocaleTimeString(),i=new Date(1e3*n.sunset).toLocaleTimeString(),u="".concat(o,"°C, ").concat(r,", ").concat(c,", ").concat(a,", Sunrise: ").concat(s,", Sunset: ").concat(i),l=u.length>100?u.substring(0,97)+"...":u;fetch("https://ntfy.sh/mestrotestweather",{method:"POST",body:l}).then((function(t){if(!t.ok)throw new Error("Notification error: ".concat(t.statusText));console.log("Notification sent successfully.")})).catch((function(t){console.error("Error sending notification:",t)}))}(e)})).catch((function(t){console.error("Error fetching weather:",t),document.getElementById("weather-result").textContent=t.toString()}))}else document.getElementById("weather-result").textContent="Please select a city."}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q1IsQ0hyQmdCeUMsQ0FBd0J2QyxFQUM1QixJQUNDSCxPQUFNLFNBQUNDLEdBQ0pDLFFBQVFELE1BQU0sMEJBQTJCQSxHQUN6Q3RCLFNBQVNDLGVBQWUsa0JBQW1CK0QsWUFDdkMxQyxFQUFNMkMsVUFDZCxHLE1BRUpqRSxTQUFTQyxlQUFlLGtCQUFtQitELFlBQ3ZDLHVCQUVaLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZW50ZnktYXBwLy4vc3JjL3V0aWxzLnRzIiwid2VicGFjazovL3dlbnRmeS1hcHAvLi9zcmMvYXBwLnRzIiwid2VicGFjazovL3dlbnRmeS1hcHAvLi9zcmMvc2VydmljZXMvV2VhdGhlclNlcnZpY2UudHMiLCJ3ZWJwYWNrOi8vd2VudGZ5LWFwcC8uL3NyYy9zZXJ2aWNlcy9EaXNwbGF5U2VydmljZS50cyIsIndlYnBhY2s6Ly93ZW50ZnktYXBwLy4vc3JjL3NlcnZpY2VzL05vdGlmaWNhdGlvblNlcnZpY2UudHMiLCJ3ZWJwYWNrOi8vd2VudGZ5LWFwcC8uL3NyYy9zZXJ2aWNlcy9BY2Nlc3NvcnlTZXJ2aWNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBrZWx2aW5Ub0NlbHNpdXMoa2VsdmluOiBudW1iZXIpOiBzdHJpbmcge1xyXG4gICAgcmV0dXJuIChrZWx2aW4gLSAyNzMuMTUpLnRvRml4ZWQoMSk7XHJcbn1cclxuIiwiaW1wb3J0IHsgZmV0Y2hXZWF0aGVyIH0gZnJvbSBcIi4vc2VydmljZXMvV2VhdGhlclNlcnZpY2VcIjtcclxuaW1wb3J0IHsgZGlzcGxheVdlYXRoZXIgfSBmcm9tIFwiLi9zZXJ2aWNlcy9EaXNwbGF5U2VydmljZVwiO1xyXG5pbXBvcnQgeyBzZW5kV2VhdGhlck5vdGlmaWNhdGlvbiB9IGZyb20gXCIuL3NlcnZpY2VzL05vdGlmaWNhdGlvblNlcnZpY2VcIjtcclxuXHJcbmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZmV0Y2gtd2VhdGhlclwiKSEuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgIGNvbnN0IGNpdHlWYWx1ZSA9IChcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNpdHktc2VsZWN0XCIpIGFzIEhUTUxTZWxlY3RFbGVtZW50XHJcbiAgICApLnZhbHVlO1xyXG5cclxuICAgIGlmIChjaXR5VmFsdWUpIHtcclxuICAgICAgICBjb25zdCBbbGF0LCBsb25dID0gY2l0eVZhbHVlLnNwbGl0KFwiLFwiKTtcclxuXHJcbiAgICAgICAgZmV0Y2hXZWF0aGVyKGxhdCwgbG9uKVxyXG4gICAgICAgICAgICAudGhlbigod2VhdGhlckRhdGEpID0+IHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXlXZWF0aGVyKHdlYXRoZXJEYXRhKTtcclxuICAgICAgICAgICAgICAgIHNlbmRXZWF0aGVyTm90aWZpY2F0aW9uKHdlYXRoZXJEYXRhKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGZldGNoaW5nIHdlYXRoZXI6XCIsIGVycm9yKTtcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwid2VhdGhlci1yZXN1bHRcIikhLnRleHRDb250ZW50ID1cclxuICAgICAgICAgICAgICAgICAgICBlcnJvci50b1N0cmluZygpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ3ZWF0aGVyLXJlc3VsdFwiKSEudGV4dENvbnRlbnQgPVxyXG4gICAgICAgICAgICBcIlBsZWFzZSBzZWxlY3QgYSBjaXR5LlwiO1xyXG4gICAgfVxyXG59KTtcclxuIiwiaW1wb3J0IHsgV2VhdGhlclJlc3BvbnNlIH0gZnJvbSBcIi4uL3R5cGVzL1dlYXRoZXJUeXBlc1wiO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGZldGNoV2VhdGhlcihcclxuICAgIGxhdDogc3RyaW5nLFxyXG4gICAgbG9uOiBzdHJpbmdcclxuKTogUHJvbWlzZTxXZWF0aGVyUmVzcG9uc2U+IHtcclxuICAgIGNvbnN0IGN1cnJlbnRUaW1lID0gTWF0aC5mbG9vcihEYXRlLm5vdygpIC8gMTAwMCk7XHJcblxyXG4gICAgY29uc3Qgd2VhdGhlckFwaVVybCA9IGAvd2VhdGhlci8ke2xhdH0vJHtsb259LyR7Y3VycmVudFRpbWV9YDtcclxuXHJcbiAgICByZXR1cm4gZmV0Y2god2VhdGhlckFwaVVybClcclxuICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHtcclxuICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBBbiBlcnJvciBvY2N1cnJlZDogJHtyZXNwb25zZS5zdGF0dXNUZXh0fWApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCkgYXMgUHJvbWlzZTxXZWF0aGVyUmVzcG9uc2U+O1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZmV0Y2hpbmcgd2VhdGhlcjpcIiwgZXJyb3IpO1xyXG4gICAgICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgICB9KTtcclxufVxyXG4iLCJpbXBvcnQgeyBXZWF0aGVyUmVzcG9uc2UgfSBmcm9tIFwiLi4vdHlwZXMvV2VhdGhlclR5cGVzXCI7XHJcbmltcG9ydCB7IGtlbHZpblRvQ2Vsc2l1cyB9IGZyb20gXCIuLi91dGlsc1wiO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGRpc3BsYXlXZWF0aGVyKGRhdGE6IFdlYXRoZXJSZXNwb25zZSk6IHZvaWQge1xyXG4gICAgY29uc3Qgd2VhdGhlckRpdjogSFRNTEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIndlYXRoZXItcmVzdWx0XCIpITtcclxuICAgIHdlYXRoZXJEaXYuaW5uZXJIVE1MID0gXCJcIjtcclxuICAgIHdlYXRoZXJEaXYuY2xhc3NOYW1lID0gXCJ3ZWF0aGVyLWdyaWRcIjtcclxuXHJcbiAgICBkYXRhLmRhdGEuZm9yRWFjaCgod2VhdGhlckVudHJ5KSA9PiB7XHJcbiAgICAgICAgY29uc3Qgd2VhdGhlckl0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgICAgIHdlYXRoZXJJdGVtLmNsYXNzTmFtZSA9IFwid2VhdGhlci1pdGVtXCI7XHJcblxyXG4gICAgICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSh3ZWF0aGVyRW50cnkuZHQgKiAxMDAwKTtcclxuICAgICAgICBjb25zdCBzdW5yaXNlID0gbmV3IERhdGUod2VhdGhlckVudHJ5LnN1bnJpc2UgKiAxMDAwKTtcclxuICAgICAgICBjb25zdCBzdW5zZXQgPSBuZXcgRGF0ZSh3ZWF0aGVyRW50cnkuc3Vuc2V0ICogMTAwMCk7XHJcblxyXG4gICAgICAgIHdlYXRoZXJJdGVtLmlubmVySFRNTCA9IGBcclxuICAgICAgICAgICAgPGgzPiR7ZGF0ZS50b0xvY2FsZURhdGVTdHJpbmcoKX08L2gzPlxyXG4gICAgICAgICAgICA8cD48c3Ryb25nPkRlc2NyaXB0aW9uOjwvc3Ryb25nPiAke1xyXG4gICAgICAgICAgICAgICAgd2VhdGhlckVudHJ5LndlYXRoZXJbMF0uZGVzY3JpcHRpb25cclxuICAgICAgICAgICAgfTwvcD5cclxuICAgICAgICAgICAgPHA+PHN0cm9uZz5UZW1wZXJhdHVyZTo8L3N0cm9uZz4gJHtrZWx2aW5Ub0NlbHNpdXMoXHJcbiAgICAgICAgICAgICAgICB3ZWF0aGVyRW50cnkudGVtcFxyXG4gICAgICAgICAgICApfcKwQzwvcD5cclxuICAgICAgICAgICAgPHA+PHN0cm9uZz5GZWVscyBMaWtlOjwvc3Ryb25nPiAke2tlbHZpblRvQ2Vsc2l1cyhcclxuICAgICAgICAgICAgICAgIHdlYXRoZXJFbnRyeS5mZWVsc19saWtlXHJcbiAgICAgICAgICAgICl9wrBDPC9wPlxyXG4gICAgICAgICAgICA8cD48c3Ryb25nPlByZXNzdXJlOjwvc3Ryb25nPiAke3dlYXRoZXJFbnRyeS5wcmVzc3VyZX0gaFBhPC9wPlxyXG4gICAgICAgICAgICA8cD48c3Ryb25nPkh1bWlkaXR5Ojwvc3Ryb25nPiAke3dlYXRoZXJFbnRyeS5odW1pZGl0eX0lPC9wPlxyXG4gICAgICAgICAgICA8cD48c3Ryb25nPldpbmQgU3BlZWQ6PC9zdHJvbmc+ICR7d2VhdGhlckVudHJ5LndpbmRfc3BlZWQudG9GaXhlZChcclxuICAgICAgICAgICAgICAgIDFcclxuICAgICAgICAgICAgKX0gbS9zPC9wPlxyXG4gICAgICAgICAgICA8cD48c3Ryb25nPkNsb3Vkczo8L3N0cm9uZz4gJHt3ZWF0aGVyRW50cnkuY2xvdWRzfSU8L3A+XHJcbiAgICAgICAgICAgIDxwPjxzdHJvbmc+U3VucmlzZTo8L3N0cm9uZz4gJHtzdW5yaXNlLnRvTG9jYWxlVGltZVN0cmluZygpfTwvcD5cclxuICAgICAgICAgICAgPHA+PHN0cm9uZz5TdW5zZXQ6PC9zdHJvbmc+ICR7c3Vuc2V0LnRvTG9jYWxlVGltZVN0cmluZygpfTwvcD5cclxuICAgICAgICBgO1xyXG5cclxuICAgICAgICB3ZWF0aGVyRGl2LmFwcGVuZENoaWxkKHdlYXRoZXJJdGVtKTtcclxuICAgIH0pO1xyXG59XHJcbiIsImltcG9ydCB7IFdlYXRoZXJSZXNwb25zZSB9IGZyb20gXCIuLi90eXBlcy9XZWF0aGVyVHlwZXNcIjtcclxuaW1wb3J0IHsgZ2V0QWNjZXNzb3J5TWVzc2FnZSB9IGZyb20gXCIuL0FjY2Vzc29yeVNlcnZpY2VcIjtcclxuaW1wb3J0IHsga2VsdmluVG9DZWxzaXVzIH0gZnJvbSBcIi4uL3V0aWxzXCI7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gc2VuZFdlYXRoZXJOb3RpZmljYXRpb24od2VhdGhlckRhdGE6IFdlYXRoZXJSZXNwb25zZSk6IHZvaWQge1xyXG4gICAgY29uc3QgY3VycmVudFdlYXRoZXIgPSB3ZWF0aGVyRGF0YS5kYXRhWzBdO1xyXG4gICAgY29uc3QgdGVtcENlbHNpdXMgPSBrZWx2aW5Ub0NlbHNpdXMoY3VycmVudFdlYXRoZXIudGVtcCk7XHJcbiAgICBjb25zdCB3ZWF0aGVyQ29uZGl0aW9uID0gY3VycmVudFdlYXRoZXIud2VhdGhlclswXS5tYWluLnRvTG93ZXJDYXNlKCk7XHJcblxyXG4gICAgY29uc3QgYWNjZXNzb3J5TWVzc2FnZSA9IGdldEFjY2Vzc29yeU1lc3NhZ2Uod2VhdGhlckNvbmRpdGlvbik7XHJcblxyXG4gICAgY29uc3Qgd2luZFNwZWVkID0gYFdpbmQ6ICR7Y3VycmVudFdlYXRoZXIud2luZF9zcGVlZC50b0ZpeGVkKDEpfW0vc2A7XHJcbiAgICBjb25zdCBjbG91ZHMgPSBgQ2xvdWRzOiAke2N1cnJlbnRXZWF0aGVyLmNsb3Vkc30lYDtcclxuICAgIGNvbnN0IHN1bnJpc2UgPSBuZXcgRGF0ZShcclxuICAgICAgICBjdXJyZW50V2VhdGhlci5zdW5yaXNlICogMTAwMFxyXG4gICAgKS50b0xvY2FsZVRpbWVTdHJpbmcoKTtcclxuICAgIGNvbnN0IHN1bnNldCA9IG5ldyBEYXRlKGN1cnJlbnRXZWF0aGVyLnN1bnNldCAqIDEwMDApLnRvTG9jYWxlVGltZVN0cmluZygpO1xyXG4gICAgY29uc3Qgc3VtbWFyeSA9IGAke3RlbXBDZWxzaXVzfcKwQywgJHthY2Nlc3NvcnlNZXNzYWdlfSwgJHt3aW5kU3BlZWR9LCAke2Nsb3Vkc30sIFN1bnJpc2U6ICR7c3VucmlzZX0sIFN1bnNldDogJHtzdW5zZXR9YDtcclxuXHJcbiAgICAvLyBFbnN1cmUgdGhlIG1lc3NhZ2UgaXMgbm90IGxvbmdlciB0aGFuIDEwMCBjaGFyYWN0ZXJzXHJcbiAgICBjb25zdCBub3RpZmljYXRpb25NZXNzYWdlID1cclxuICAgICAgICBzdW1tYXJ5Lmxlbmd0aCA+IDEwMCA/IHN1bW1hcnkuc3Vic3RyaW5nKDAsIDk3KSArIFwiLi4uXCIgOiBzdW1tYXJ5O1xyXG5cclxuICAgIGZldGNoKFwiaHR0cHM6Ly9udGZ5LnNoL21lc3Ryb3Rlc3R3ZWF0aGVyXCIsIHtcclxuICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4gICAgICAgIGJvZHk6IG5vdGlmaWNhdGlvbk1lc3NhZ2UsXHJcbiAgICB9KVxyXG4gICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE5vdGlmaWNhdGlvbiBlcnJvcjogJHtyZXNwb25zZS5zdGF0dXNUZXh0fWApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiTm90aWZpY2F0aW9uIHNlbnQgc3VjY2Vzc2Z1bGx5LlwiKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIHNlbmRpbmcgbm90aWZpY2F0aW9uOlwiLCBlcnJvcik7XHJcbiAgICAgICAgfSk7XHJcbn1cclxuIiwiZXhwb3J0IGZ1bmN0aW9uIGdldEFjY2Vzc29yeU1lc3NhZ2UoY29uZGl0aW9uOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgc3dpdGNoIChjb25kaXRpb24pIHtcclxuICAgICAgICBjYXNlIFwicmFpblwiOlxyXG4gICAgICAgICAgICByZXR1cm4gXCJVbWJyZWxsYVwiO1xyXG4gICAgICAgIGNhc2UgXCJjbGVhclwiOlxyXG4gICAgICAgICAgICByZXR1cm4gXCJTdW5nbGFzc2VzXCI7XHJcbiAgICAgICAgY2FzZSBcIndpbmRcIjpcclxuICAgICAgICAgICAgcmV0dXJuIFwiV2luZGNvYXRcIjtcclxuICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICByZXR1cm4gXCJcIjtcclxuICAgIH1cclxufVxyXG4iXSwibmFtZXMiOlsia2VsdmluVG9DZWxzaXVzIiwia2VsdmluIiwidG9GaXhlZCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJhZGRFdmVudExpc3RlbmVyIiwibGF0IiwibG9uIiwiY3VycmVudFRpbWUiLCJ3ZWF0aGVyQXBpVXJsIiwiY2l0eVZhbHVlIiwidmFsdWUiLCJzcGxpdCIsIk1hdGgiLCJmbG9vciIsIkRhdGUiLCJub3ciLCJmZXRjaCIsInRoZW4iLCJyZXNwb25zZSIsIm9rIiwiRXJyb3IiLCJzdGF0dXNUZXh0IiwianNvbiIsImNhdGNoIiwiZXJyb3IiLCJjb25zb2xlIiwid2VhdGhlckRhdGEiLCJkYXRhIiwid2VhdGhlckRpdiIsImlubmVySFRNTCIsImNsYXNzTmFtZSIsImZvckVhY2giLCJ3ZWF0aGVyRW50cnkiLCJ3ZWF0aGVySXRlbSIsImNyZWF0ZUVsZW1lbnQiLCJkYXRlIiwiZHQiLCJzdW5yaXNlIiwic3Vuc2V0IiwidG9Mb2NhbGVEYXRlU3RyaW5nIiwid2VhdGhlciIsImRlc2NyaXB0aW9uIiwidGVtcCIsImZlZWxzX2xpa2UiLCJwcmVzc3VyZSIsImh1bWlkaXR5Iiwid2luZF9zcGVlZCIsImNsb3VkcyIsInRvTG9jYWxlVGltZVN0cmluZyIsImFwcGVuZENoaWxkIiwiY3VycmVudFdlYXRoZXIiLCJ0ZW1wQ2Vsc2l1cyIsImFjY2Vzc29yeU1lc3NhZ2UiLCJjb25kaXRpb24iLCJnZXRBY2Nlc3NvcnlNZXNzYWdlIiwibWFpbiIsInRvTG93ZXJDYXNlIiwid2luZFNwZWVkIiwic3VtbWFyeSIsIm5vdGlmaWNhdGlvbk1lc3NhZ2UiLCJsZW5ndGgiLCJzdWJzdHJpbmciLCJtZXRob2QiLCJib2R5IiwibG9nIiwic2VuZFdlYXRoZXJOb3RpZmljYXRpb24iLCJ0ZXh0Q29udGVudCIsInRvU3RyaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==